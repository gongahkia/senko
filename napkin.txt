~ethos
* functional programming
* all data to be represented in data structures
* all data transformed through explicit returns in functions
* clean, readable code

~FUA
* edit the card_challenge to an additional field of date that card needs to be tested, edit this in README.md, eg.sko and doc/quickstart.md
* file format for flash cards as json, prepare sample file
* render front-end in curses cli
* separate each portion of rendering (file selection, rendering a file, selecting mode, editing file, making cards) into diff functions
* add nice visual response kickback upon selecting items, everything responds and bounces one pixel
* learn how spaced repetition systems work, implement it in the program
* vim binds for flash cards
* allow creating, editing, deleting and reading flash cards
* shell-integration to run the command anywhere from the CLI
